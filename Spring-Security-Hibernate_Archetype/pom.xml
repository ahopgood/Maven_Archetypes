<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>Spring-Security-Hibernate_Archetype</artifactId>
  <packaging>war</packaging>
  <parent>
  	<groupId>com.alexander.maven.archetypes</groupId>
  	<artifactId>Parent_Archetype</artifactId>
  	<version>0.0.1-SNAPSHOT</version>
  </parent>

    <!-- To get the maven archetype plugin working you will need to point eclipse to the location of maven (not the embedded one) -->
    <dependencies>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
    </dependencies>

    <properties>
        <hibernate-core.version>5.4.21.Final</hibernate-core.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <configuration>
                    <container>
                        <containerId>tomcat6x</containerId>
                        <type>remote</type>
                    </container>
                    <configuration>
                        <type>runtime</type>
                        <properties>
                            <cargo.remote.username>${servlet.container.username}</cargo.remote.username>
                            <cargo.remote.password>${servlet.container.password}</cargo.remote.password>
                            <cargo.tomcat.manager.url>${servlet.container.manager.url}</cargo.tomcat.manager.url>
                        </properties>
                    </configuration>
                </configuration>
            </plugin>
        </plugins>
        <!-- Build info and misc resource stuff -->
        <finalName>${build.name}</finalName>

        <filters>
            <!-- These filtered properties can be used in the specified filtered resources -->
            <filter>src/main/filters/common-filter.properties</filter>
            <filter>src/main/filters/jdbc-filter.properties</filter>
        </filters>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/nonFilteredResources</directory>
                <filtering>false</filtering>
            </resource>
        </resources>

    </build>

    <profiles>
        <profile>
            <id>DEV</id>	<!-- The name entered when running "mvn clean package -P DEV" to run a profile -->
            <activation>	<!-- Used to specify any conditions needed for the profile to be activated, also used to specify which profile is active by default -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>	<!-- These function like standard pom properties but override if there are duplicates -->
                <env>DEV</env>	<!-- can be used to alter the build name -->
                <build.name>${env}Test</build.name>
            </properties>
        </profile>
    </profiles>
</project>