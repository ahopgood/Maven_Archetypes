<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>Test_Archetype</artifactId>
	<packaging>war</packaging>
	<parent>
		<groupId>com.alexander.maven.archetypes</groupId>
		<artifactId>Parent_Archetype</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<url>http://some/location/${project.version}/</url>

	<description>
		A description of the project this pom documents.
	</description>

	<issueManagement>
		<system></system><!-- Jira, Mantis etc -->
		<url></url>
	</issueManagement>

	<ciManagement>
		<system>Jenkins</system>
		<url>http://hudson.masabi.com/</url>
		<notifiers>
			<notifier>
				<address>alex.hopgood+${artifactId}-issues@gmail.com</address>
				<type>mail</type>
			</notifier>
		</notifiers>
	</ciManagement>

	<developers>
		<developer>
			<id>alexhopgood</id>
			<name>Alex Hopgood</name>
			<email>alex.hopgood@gmail.com</email>
			<roles>
				<role>Server Developer</role>
			</roles>
		</developer>
	</developers>

	<!-- Used for publishing artifacts -->
	<distributionManagement>
		<repository> <!-- Release repo -->
			<id>${artifactId}-repo</id>
			<name>Releases Maven Artifactory Repository</name>
			<url>http://artifactory.something.com/artifactory/libs-release-local</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Snapshot Maven Repository</name>
			<url>http://artifactory.masabi.com/artifactory/libs-snapshot-local</url>
		</snapshotRepository>
		<site>
			<id>project-server-site</id>
			<url>scp://domain/apache2/path/${project.version}/</url>
		</site>
	</distributionManagement>

	<!-- Details about Source Code Management Location -->
	<scm>
		<connection>scm:git:https://github.com/ahopgood/Maven_Archetypes.git</connection>
		<developerConnection>scm:git:https://github.com/ahopgood/Maven_Archetypes.git</developerConnection>
		<url>https://github.com/ahopgood/Maven_Archetypes.git</url>
	</scm>

	<!-- To get the maven archetype plugin working you will need to point eclipse to the location of maven (not the embedded one) -->
	<dependencies>
  		<dependency>
  			<groupId>junit</groupId>
  			<artifactId>junit</artifactId>
  			<version>4.10</version>
  			<scope>test</scope>
		</dependency>
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-context</artifactId>
  			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.1.7.Final</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.21</version>
		</dependency>
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.5.4</version>
		</dependency>
	</dependencies>
  
  	<properties>
  		<spring.version>3.0.5.RELEASE</spring.version>
  		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  		<java.version>1.6</java.version>
  		<maven.build.timestamp.format>yyyy</maven.build.timestamp.format>
  		<!-- Maven plugin versions -->
  		<maven.site.plugin.version>3.3</maven.site.plugin.version>
  		<maven.compiler.plugin.version>2.5.1</maven.compiler.plugin.version>
  		<maven.cobertura.plugin.version>2.7</maven.cobertura.plugin.version>
  		<maven.dependency.check.plugin.version>1.2.5</maven.dependency.check.plugin.version>
  		<maven.changelog.plugin.version>2.2</maven.changelog.plugin.version>
  		<maven.findbugs.plugin.version>3.0.1</maven.findbugs.plugin.version>
  		<maven.pmd.plugin.version>2.7.1</maven.pmd.plugin.version>
  		<maven.surefire.report.plugin.version>2.12.4</maven.surefire.report.plugin.version>
  		<maven.checkstyle.plugin.version>2.9.1</maven.checkstyle.plugin.version>
  		<maven.enforcer.plugin.version>1.4</maven.enforcer.plugin.version>
  		<!-- Cargo properties -->
  		<tomcat.containerId>tomcat7x</tomcat.containerId> <!-- tomcat6x -->
  		<hostname>localhost</hostname>
  		<port>8081</port>
  		<servlet.container.username>robomanager</servlet.container.username>
  		<servlet.container.password>robomanager</servlet.container.password>
  		<cargo.tomcat.manager.url>http://${hostname}:${port}/manager/text</cargo.tomcat.manager.url> <!-- /manager/ for tomcat6 -->
	</properties>
  
	<build>
    	<plugins>
  			<plugin>
  				<groupId>org.apache.maven.plugins</groupId>
  				<artifactId>maven-compiler-plugin</artifactId>
  				<version>${maven.compiler.plugin.version}</version>
  				<configuration>
  					<source>${java.version}</source>
  					<target>${java.version}</target>
  				</configuration>
  			</plugin>
  			<!-- Plugin for creating a maven site in the reporting maven phase -->
  			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven.site.plugin.version}</version>
				<dependencies>
				<!-- add support for ssh/scp transfer, e.g. to store the results on a file server in a similar way to storing wars anf jars on a repository -->
<!-- 					<dependency> -->
<!-- 						<groupId>org.apache.maven.wagon</groupId> -->
<!-- 						<artifactId>wagon-ssh</artifactId> -->
<!-- 						<version>1.0</version> -->
<!-- 					</dependency> -->
				</dependencies>
			</plugin>
			<!-- Plugin for deploying to tomcat / servlet containers -->
  			<plugin>
  				<groupId>org.codehaus.cargo</groupId>
  				<artifactId>cargo-maven2-plugin</artifactId>
  				<version>1.2.4</version>
  				<configuration>
  					<container>
	  					<containerId>${tomcat.containerId}</containerId>
	  					<type>remote</type>
  					</container>
  					<configuration>
  						<type>runtime</type>
  						<properties>
							<cargo.hostname>${hostname}</cargo.hostname>
							<cargo.servlet.port>${port}</cargo.servlet.port>
  							<cargo.remote.username>${servlet.container.username}</cargo.remote.username>
	  						<cargo.remote.password>${servlet.container.password}</cargo.remote.password>
	  						<cargo.tomcat.manager.url>${servlet.container.manager.url}</cargo.tomcat.manager.url>
  						</properties>
  					</configuration>
  				</configuration>
  			</plugin>
  			<!-- Can be run to build a report on dependencies with security vulnerabilities -->
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>${maven.dependency.check.plugin.version}</version>
			</plugin>
			<!-- Manage license removal, modification and addition  -->
			<plugin>
    			<groupId>com.mycila</groupId>
   				<artifactId>license-maven-plugin</artifactId>
    			<version>2.11</version>
    			<configuration>
        			<header>src/main/resources/header.txt</header>
        			<properties>
            			<owner>Alexander Hopgood</owner>
            			<email>alex.hopgood@gmail.com</email>
                    	<year>${maven.build.timestamp}</year>
        			</properties>
        			<quiet>false</quiet>
                	<failIfMissing>true</failIfMissing>
                	<aggregate>false</aggregate>
        			<includes>
        				<include>src/main/java/**/*.java</include>
						<include>src/test/java/**/*.java</include>
        			</includes>
					<excludes>
						<exclude>target/**</exclude>
					</excludes>      		
        			<useDefaultExcludes>true</useDefaultExcludes>
        			<mapping>
        				<java>JAVADOC_STYLE</java>
        			</mapping>
 					<encoding>UTF-8</encoding>
					<headerDefinitions>
						<headerDefinition>src/main/resources/javadoc_header_style.xml</headerDefinition>
					</headerDefinitions>
       			</configuration>
    			<executions>
        			<execution>
        				<goals>
        					<goal>check</goal>
						</goals>
					</execution>
    			</executions>
			</plugin>
			<!-- Cobertura code coverage plugin for use in site generation -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${maven.cobertura.plugin.version}</version>
				<configuration>
					<check>
						<haltOnFailure>true</haltOnFailure>
						<totalBranchRate>0</totalBranchRate>			      		
						<totalLineRate>0</totalLineRate>
					</check>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven.enforcer.plugin.version}</version>
				<executions>
					<execution>
						<id>enforce-no-snapshots</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireReleaseDeps>
                  					<message>No Snapshots Allowed!</message>
                				</requireReleaseDeps>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<!-- Build info and misc resource stuff -->
		<finalName>${build.name}</finalName>

		<filters>
			<!-- These filtered properties can be used in the specified filtered resources -->
			<filter>src/main/filters/common-filter.properties</filter>
			<filter>src/main/filters/jdbc-filter.properties</filter>
		</filters>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/nonFilteredResources</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
	</build>
  
  	<!-- Plugin configuration specified here for reporting -->
	<reporting>
		<plugins>
			<!-- Project Info Report on the left side of the site -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven.reports.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>project-team</report>
							<report>issue-tracking</report>
							<!-- <report>dependencies</report> --> <!-- Takes a bit of time -->
							<report>scm</report>
							<report>plugins</report>
							<report>summary</report>
							<report>cim</report>
							<report>dependency-convergence</report>
							<report>distribution-management</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>		
			<!-- Test coverage reports -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${maven.cobertura.plugin.version}</version>
				<configuration>
					<formats>
						<format>xml</format>
						<format>html</format>
					</formats>
				</configuration>
			</plugin>
			<!-- Plugin for building reports on dependecies that have security vulnerabilities -->
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>${maven.dependency.check.plugin.version}</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>check</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- Change log report (works with SCM tag details) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>${maven.changelog.plugin.version}</version>
			</plugin>
			<!-- PMD automatic code analysis report (common programming flaws, semantic errors & potential bugs) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.plugin.version}</version>
				<configuration>
					<targetjdk>${java.version}</targetjdk>
				</configuration>
			</plugin>
			<!-- Potential logical errors and bugs report -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${maven.findbugs.plugin.version}</version>
				<!-- find bugs 2.x.x is for pre java 8, 3.x.x is for java 8 and newer -->
				<configuration>
					<targetJDK>${java.version}</targetJDK>
				</configuration>
			</plugin>
			<!-- Surefire report as part of the site generation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.report.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>report-only</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- Code styling checks report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.plugin.version}</version>
				<configuration>
					<skip>false</skip> 
					<!-- If true, then its not part of site generation -->
				</configuration>
			</plugin>

		</plugins>
	</reporting>
	  
	<profiles>
  		<profile>
  			<id>DEV</id>	<!-- The name entered when running "mvn clean package -P DEV" to run a profile -->
  			<activation>	<!-- Used to specify any conditions needed for the profile to be activated, also used to specify which profile is active by default -->
  				<activeByDefault>true</activeByDefault>
  			</activation>
  			<properties>	<!-- These function like standard pom properties but override if there are duplicates -->
  				<env>DEV</env>	<!-- can be used to alter the build name -->
  				<build.name>${env}Test</build.name>
  			</properties>
  		</profile>
  	</profiles>
</project>