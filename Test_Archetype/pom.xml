<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.alexander.maven.archetypes</groupId>
	<artifactId>Test_Archetype</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<url>http://some/location/${project.version}/</url>

	<description>
		A description of the project this pom documents.
	</description>

	<issueManagement>
		<system></system><!-- Jira, Mantis etc -->
		<url></url>
	</issueManagement>

	<ciManagement>
		<system>Jenkins</system>
		<url>http://hudson.masabi.com/</url>
		<notifiers>
			<notifier>
				<address>alex.hopgood+${artifactId}-issues@gmail.com</address>
				<type>mail</type>
			</notifier>
		</notifiers>
	</ciManagement>

	<developers>
		<developer>
			<id>alexhopgood</id>
			<name>Alex Hopgood</name>
			<email>alex.hopgood@gmail.com</email>
			<roles>
				<role>Server Developer</role>
			</roles>
		</developer>
	</developers>

	<!-- Used for publishing artifacts -->
	<distributionManagement>
		<repository> <!-- Release repo -->
			<id>${artifactId}-repo</id>
			<name>Releases Maven Artifactory Repository</name>
			<url>http://artifactory.something.com/artifactory/libs-release-local</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Snapshot Maven Repository</name>
			<url>http://artifactory.masabi.com/artifactory/libs-snapshot-local</url>
		</snapshotRepository>
		<site>
			<id>project-server-site</id>
			<url>scp://domain/apache2/path/${project.version}/</url>
		</site>
	</distributionManagement>


	<!-- To get the maven archetype plugin working you will need to point eclipse to the location of maven (not the embedded one) -->
	<dependencies>
  		<dependency>
  			<groupId>junit</groupId>
  			<artifactId>junit</artifactId>
  			<version>4.10</version>
  			<scope>test</scope>
		</dependency>
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-context</artifactId>
  			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>
	</dependencies>
  
  	<properties>
  		<spring.version>3.0.5.RELEASE</spring.version>
  		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  		<java.version>1.6</java.version>
  		<maven.build.timestamp.format>yyyy</maven.build.timestamp.format>
  		<maven.site.plugin.version>3.3</maven.site.plugin.version>
  		<maven.compiler.plugin.version>2.5.1</maven.compiler.plugin.version>
	</properties>
  
	<build>
    	<plugins>
  			<plugin>
  				<groupId>org.apache.maven.plugins</groupId>
  				<artifactId>maven-compiler-plugin</artifactId>
  				<version>${maven.compiler.plugin.version}</version>
  				<configuration>
  					<source>${java.version}</source>
  					<target>${java.version}</target>
  				</configuration>
  			</plugin>
  			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven.site.plugin.version}</version>
				<dependencies>
				<!-- add support for ssh/scp -->
<!-- 					<dependency> -->
<!-- 						<groupId>org.apache.maven.wagon</groupId> -->
<!-- 						<artifactId>wagon-ssh</artifactId> -->
<!-- 						<version>1.0</version> -->
<!-- 					</dependency> -->
				</dependencies>
			</plugin>
  			<plugin>
  				<groupId>org.codehaus.cargo</groupId>
  				<artifactId>cargo-maven2-plugin</artifactId>
  				<version>1.2.4</version>
  				<configuration>
  					<container>
	  					<containerId>tomcat6x</containerId>
	  					<type>remote</type>
  					</container>
  					<configuration>
  						<type>runtime</type>
  						<properties>
  							<cargo.remote.username>${servlet.container.username}</cargo.remote.username>
	  						<cargo.remote.password>${servlet.container.password}</cargo.remote.password>
	  						<cargo.tomcat.manager.url>${servlet.container.manager.url}</cargo.tomcat.manager.url>
  						</properties>
  					</configuration>
  				</configuration>
  			</plugin>
			<plugin>
    			<groupId>com.mycila</groupId>
   				<artifactId>license-maven-plugin</artifactId>
    			<version>2.11</version>
    			<configuration>
        			<header>src/main/resources/header.txt</header>
        			<properties>
            			<owner>Alexander Hopgood</owner>
            			<email>alex.hopgood@gmail.com</email>
                    	<year>${maven.build.timestamp}</year>
        			</properties>
        			<quiet>false</quiet>
                	<failIfMissing>true</failIfMissing>
                	<aggregate>false</aggregate>
        			<includes>
        				<include>src/main/java/**/*.java</include>
						<include>src/test/java/**/*.java</include>
        			</includes>
					<excludes>
						<exclude>target/**</exclude>
					</excludes>      		
        			<useDefaultExcludes>true</useDefaultExcludes>
        			<mapping>
        				<java>JAVADOC_STYLE</java>
        			</mapping>
 					<encoding>UTF-8</encoding>
					<headerDefinitions>
						<headerDefinition>src/main/resources/javadoc_header_style.xml</headerDefinition>
					</headerDefinitions>
       			</configuration>
    			<executions>
        			<execution>
        				<goals>
        					<goal>check</goal>
						</goals>
					</execution>
    			</executions>
			</plugin>
		</plugins>
		<!-- Build info and misc resource stuff -->
		<finalName>${build.name}</finalName>

		<filters>
			<!-- These filtered properties can be used in the specified filtered resources -->
			<filter>src/main/filters/common-filter.properties</filter>
		</filters>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/nonFilteredResources</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
	</build>
  
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
			</plugin>
		</plugins>
	</reporting>  
  <profiles>
  	<profile>
  		<id>DEV</id>	<!-- The name entered when running "mvn clean package -P DEV" to run a profile -->
  		<activation>	<!-- Used to specify any conditions needed for the profile to be activated, also used to specify which profile is active by default -->
  			<activeByDefault>true</activeByDefault>
  		</activation>
  		<properties>	<!-- These function like standard pom properties but override if there are duplicates -->
  			<env>DEV</env>	<!-- can be used to alter the build name -->
  			<build.name>${env}Test</build.name>
  		</properties>
  	</profile>
  </profiles>
</project>